{"version":3,"file":"static/js/FullPizza.39981061.chunk.js","mappings":"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","sources":["pages/Full-pizza.tsx"],"sourcesContent":["import React, {useState} from 'react'\r\nimport axios from 'axios';\r\nimport {useDispatch, useSelector} from 'react-redux'\r\nimport { useEffect } from 'react';\r\nimport {useNavigate, useParams} from 'react-router-dom'\r\nimport iconCart from '../assets/img/cart.svg';\r\nimport { useWindowWidth } from '../hooks/useWindowWidth';\r\nimport { selectCartItemById } from '../redux/cart/selectors';\r\nimport { addItem } from '../redux/cart/slice';\r\n\r\n\r\nconst FullPizza: React.FC = () => {\r\n  \r\n  const [pizza, setPizza] = useState<{\r\n    id: string;\r\n    imageUrl: string;\r\n    title: string;\r\n    price: number;\r\n    types: number[];\r\n    energyValue: {name: string; value: string}[];\r\n    sizes: number[];\r\n    description: string;\r\n    ingridients:{name: string; url: string;}[];\r\n  }>();\r\n\r\n  const {id} = useParams();\r\n  const navigate = useNavigate();\r\n  const dispatch = useDispatch();\r\n  const cartItem = useSelector(selectCartItemById(id as string))\r\n  const [activeType,setActiveType] = useState(0);\r\n  const [activeSize,setActiveSize] = useState(0);\r\n  const typeNames =[\"Thin\",\"Standart\"]\r\n  const [width] = useWindowWidth();\r\n\r\n  const addedCount = cartItem ? cartItem.count : 0\r\n  \r\n\r\n  useEffect(()=>{\r\n    \r\n    async function fetchPizza(){\r\n      try {\r\n        const {data} = await axios.get('https://63287ed29a053ff9aab95e51.mockapi.io/items/' + id)\r\n        setPizza(data);\r\n        window.scrollTo(0, 0)\r\n      } catch(error) {\r\n        alert(`can't get pizza`)\r\n        navigate('/World-of-Pizza')\r\n      }\r\n    }\r\n    fetchPizza();\r\n  },[])\r\n\r\n  if(!pizza){\r\n    return <>\"loading...\"</>\r\n  }\r\n\r\n  const onClickAdd = () => {\r\n    const item = {\r\n      id : pizza.id,\r\n      title : pizza.title,\r\n      price : pizza.price,\r\n      imageUrl : pizza.imageUrl,\r\n      types: typeNames[activeType],\r\n      sizes: pizza.sizes[activeSize],\r\n      count: 0,\r\n    }\r\n    dispatch(addItem(item))\r\n  }\r\n\r\n\r\n  return (\r\n    <div className='container'>\r\n      <div className='full-pizza'>\r\n        {width < 809?\r\n        <div className='full-pizza__header'>\r\n        <p>{pizza.title}</p>\r\n        </div>:\"\"}\r\n   \r\n        <div className='full-pizza__imgBlock'>\r\n          <img className='full-pizza__img' src={pizza.imageUrl} alt=\"\" />\r\n        </div>\r\n        <div className='full-pizza__infoBlock'>\r\n          {width > 809?\r\n            <div className='full-pizza__header'>\r\n            <p>{pizza.title}</p>\r\n            </div>:\"\"}\r\n          <p className='full-pizza__description'>{pizza.description}</p>\r\n          <div className=\"pizza-block__selector full-pizza__selector\">\r\n                  <ul>\r\n                      {pizza.types.map(typeIndex=>(\r\n                          <li onClick={()=>setActiveType(typeIndex)}\r\n                          className={activeType === typeIndex ? \"active\":\"\"}\r\n                          key={typeIndex}\r\n                          >{typeNames[typeIndex]}</li>\r\n                      ))}\r\n                  </ul>\r\n                  <ul>\r\n                      {pizza.sizes.map((size,i)=>(\r\n                          <li onClick={()=>setActiveSize(i)}\r\n                          className={activeSize === i ? \"active\":\"\"}\r\n                          key={i}>{size} cm.</li>\r\n                      ))}\r\n                  </ul>\r\n          </div>\r\n          <h4 className='full-pizza__price'>{pizza.price}$</h4>\r\n          <div onClick={onClickAdd} className=\"button full-pizza__button\">\r\n                    <img src={iconCart} alt=\"add to Cart\" />\r\n                    <p>Add to basket</p>\r\n                    <div className=\"button--outline\" >\r\n                      <i>{addedCount}</i>\r\n                    </div>     \r\n          </div>\r\n          <div className='full-pizza__ingridientsBlock'> \r\n            <p className='full-pizza__ingridientsHeader'>Ingridients</p>\r\n            <div className='full-pizza__ingridientsItems'>\r\n              {pizza.ingridients.map((obj,i)=>(\r\n                <div className='full-pizza__ingridientsItem' key={i}>\r\n                  <img className='full-pizza__ingridientImg' src={obj.url} alt=\"\" />\r\n                  <p className='full-pizza__ingridientName'>{obj.name}</p>\r\n                </div>\r\n                  ))}\r\n            </div>\r\n          </div>\r\n          <div className='full-pizza__energyValueBlock'>\r\n            {pizza.energyValue.map((obj, i)=>(\r\n            <div className='full-pizza__energyValueLine' key={i}>\r\n                <p className='full-pizza__ValueName'>{obj.name}</p>\r\n                <p className='full-pizza__Value'>{obj.value}</p>\r\n            </div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default FullPizza"],"names":["useState","pizza","setPizza","id","useParams","navigate","useNavigate","dispatch","useDispatch","cartItem","useSelector","selectCartItemById","activeType","setActiveType","activeSize","setActiveSize","typeNames","useWindowWidth","width","addedCount","count","useEffect","axios","data","window","scrollTo","alert","fetchPizza","className","title","src","imageUrl","alt","description","types","map","typeIndex","onClick","sizes","size","i","price","item","addItem","iconCart","ingridients","obj","url","name","energyValue","value"],"sourceRoot":""}